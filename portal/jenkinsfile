pipeline{
    agent any

    stages{
                stage('Build Docker image'){
            steps{
                script{
                    def dockerImage = docker.build ("celsinhobueno/portal:${env.BUILD_ID}", './portal')
                    env.IMAGE_ID = dockerImage.id
                }
            }
        }
        stage('Push Docker image'){
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com/', 'dockerhub') {
                        // Faz o push da imagem para o Docker Hub usando o ID da imagem
                        docker.image(env.IMAGE_ID).push()
                    }
                }
            }
        }
        stage('Configure Kubernetes Credentials') {
            steps {
                script {
                    // Configuração do arquivo kubeconfig
                    writeFile file: "${env.HOME}/.kube/config", text: "${env.KUBE_CONFIG}"
                }
            }
        }
        stage('Teste Conexão'){
            
            steps{
                withKubeConfig([credentialsId: 'kube']){
                    script{
                        echo "Hello kube"
                        sh "kubectl get nodes"
                    }
                    //withKubeConfig([credentialsId: 'kubec']){
                }
            }                        
        }
        stage('Deploy Service'){
            steps{
                withKubeConfig([credentialsId: 'kube']){
                    sh "portal/01-service/create-service.sh"
                }                        
            }
        }   
        stage('Deploy Kubernetes'){
            agent{
                kubernetes{
                    cloud 'kubernetes'
                }
            }
            environment{
                tag_version = "${env.BUILD_ID}"
            }
            steps{                
                withKubeConfig([credentialsId: 'kube']){
                        sh """
                            cd k8s/
                            sed -i "s/{{TAG}}/$tag_version/g" deployment.yaml
                            kubectl apply -f deployment.yaml"
                        """    
                }
            }
        }
    }
}




