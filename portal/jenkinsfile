pipeline{
    agent any

    stages{
        stage('Build Docker image'){
            steps{
                script{
                    def dockerImage = docker.build ("celsinhobueno/painel:${env.BUILD_ID}", './portal')
                    env.IMAGE_ID = dockerImage.id
                }
            }
        }
        stage('Push Docker image'){
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                        // Faz o push da imagem para o Docker Hub usando o ID da imagem
                        docker.image(env.IMAGE_ID).push()
                    }
                }
                // script{
                //         docker.withRegistry('https://registry.hub.docker.com/', 'dockerhub'){
                //         docker push ("celsinhobueno/painel:${env.BUILD_ID}") 
                //         docker push ("celsinhobueno/painel:latest") 
                //         docker.image(env.IMAGE_ID).push()
                //         // docker.image("${env.BUILD_ID}").push
                //         // docker.image('latest').push    
                //         // dockerImage.push('latest')
                //         // dockerImage.push("${env.BUILD_ID}")
                //     }
                // }
            }
        }
        stage('Deploy Service'){
            steps{
                withKubeConfig([credentialsId: 'kubeconfig']){
                        sh ( "./01-service/create_service.sh" )
                }                        
            }
        }    
        stage('Deploy Kubernetes'){
            environment{
                tag_version = "${env.BUILD_ID}"
            }
            steps{
                withKubeConfig([credentialsId: 'kubeconfig']){
                    sh 'sed -i "s/{{TAG}}/$tag_version/g" ./k8s/api/deployment.yaml'
                    sh 'kubectl apply -f ./k8s/api/deployment.yaml'
                }
            }
        }
    }
}
